
def editDistance(seq_a, seq_b):
	D = []
	for i in range(len(seq_b)+1):
		D.append([0 for _ in range(len(seq_a)+1)])

	for i in range(len(seq_a)+1):
		D[0][i] = i
	for i in range(len(seq_b)+1):
		D[i][0] = i

	for i in range(1, len(seq_a)+1):
		for j in range(1, len(seq_b)+1):
			HorzDist = D[i][j-1]+1
			VertDist = D[i-1][j]+1

			if seq_a[i-1] == seq_b[j-1]:
				DiagDist = D[i-1][j-1]
			else:
				DiagDist = D[i-1][j-1]+1

			D[i][j] = min(HorzDist, VertDist, DiagDist)
	return D[-1][-1]


def motifSearch(sequence, motif):
	motifs = []
	for i in range(len(sequence)-len(motif)+1):
		if editDistance(sequence[i:i+len(motif)],motif) == 0:
			motifs.append(str(i+1))
	return ' '.join(motifs)

# print(motifSearch('TATCTGAACATCTGAAAATCTGAATATCTGAAATGATCTGAACTAGATCTGAATAAGCGAATCTGAATATTGCCATAATCTGAACTTATCTGAAATCTGAAGTTCTATCCCATCTGAACCGATATCTGAAATCTGAATGGATCTGAACGATCTGAAATCTGAATTTCGTATCTGAAGATCTGAAATCTGAAGAATCTGAAGCAACATTGATCTGAAGCAGATCTGAAATCTGAATCCATCTGAAATCTGAACATTCTATCTGAAGCAATCTGAATATCTGAAATCTGAAATCTGAATATCTGAAACTATCTGAAAATCTGAAATCTGAAAGATCTGAACTATCTGAACATCTGAAATCAAATCTGAAAAATCTGAAGGGTATCTGAAATGATCTGAACTGGTATCTGAAGAAATCTGAAAATCTGAAAAATCTGAAGACAATCTGAAACATCTGAATATGATCTGAAATCTGAAGATCTGAAATCTGAAAATCTGAAATCTGAACACATCTGAACATCTGAATCGAAACATCTGAAGATCTGAAGTGTCACAAATCTGAATTTCATATCTGAAAATCTGAACGATCTGAAGCTCAGCTATCTGAATATCTGAAATCTGAAATCTGAAACGGTAATCTGAATATCTGAACCCATCATCTGAATATCTGAAGATATCTGAAATCTGAATGCTATTATCTGAAAATCTGAACGCGCAATCTGAACATCTGAATTTTATCTGAAATCTGAACCAGATCTGAAGCCACCAATCTGAAATCTGAATCAAAATCTGAACCAGGAATCTGAAAATCTGAAACCATCTGAATATCTGAAATGCCAATCTGAA','ATCTGAAAT'))
